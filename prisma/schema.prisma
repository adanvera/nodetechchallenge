generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["store"]
}

model categories {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(100)
  materials materials[]

  @@schema("store")
}

model manufacturers {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(255)
  materials materials[]

  @@schema("store")
}

model materials {
  id                 Int            @id @default(autoincrement())
  name               String         @db.VarChar(255)
  description        String
  longDescription    String?        @map("long_description")
  customerPartId     String?        @map("customer_part_id")
  manufacturerId     Int?           @map("manufacturer_id")
  manufacturerPartId String?        @map("manufacturer_part_id")
  categoryId         Int?           @map("category_id")
  unitOfMeasure      String?        @map("unit_of_measure") @db.VarChar(50)
  unitQuantity       Decimal?       @map("unit_quantity") @db.Decimal
  requestedQuantity  Decimal?       @map("requested_quantity") @db.Decimal
  requestedUnitPrice Decimal?       @map("requested_unit_price") @db.Decimal(10, 2)
  competitorName     String?        @map("competitor_name") @db.VarChar(255)
  competitorPartName String?        @map("competitor_part_name") @db.VarChar(255)
  competitorPartId   String?        @map("competitor_part_id") @db.VarChar(100)
  categories         categories?    @relation(fields: [categoryId], references: [id], onUpdate: NoAction)
  manufacturers      manufacturers? @relation(fields: [manufacturerId], references: [id], onUpdate: NoAction)

  @@unique([name, manufacturerPartId], map: "unique_material")
  @@schema("store")
}
